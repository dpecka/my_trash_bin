Usage:

./p5gen.pl /path/to/pkg.config -param1=value -paramN=value

-----------------

Sample configuration file for package msma/rundeck-25 looks as follows:

-----------------
@main

builddir        /export/home/dpecka/src/_build/rundeck-25
targetdir       /opt/extra/rundeck-25
name            extra/rundeck-25
version         2.5.1
release         1.3.0
description     Our extra sofware
summary         Rundeck is workflow automation tool
arch            sparc
classification  EXTRA


@files
+opt/extra/rundeck-25/src.*,owner=root
-opt/extra/rundeck-25/var.*
+opt/extra/rundeck-25/share/svc/manifest/rundeck.xml,path=var/svc/manifest/extra/rundeck.xml,restart_fmri=svc:/system/manifest-import:default


@raw
depend fmri=pkg:/developer/java/jdk type=require
group groupname=rundeck
user group=rundeck username=rundeck login-shell=/usr/bin/sh home-dir=/opt/msma/rundeck-current
--------------------

Configuration file has 3 main sections, each specified in the file by `@section-name'. Actually the `main', `files' and `raw' sections are implemented. Blank lines and the lines commented out by `#' character will be silently skipped in all sections.

a) @main - sets main parameters for package like version, description, release, summary, etc ... Implemented parameters are:

builddir:	source directory from where we pack the actual package, this is usually chroot directory after installing software using DESTDIR=/path parameter for make or generally, any directory where are placed files for to be packed

targetdir:	is the target directory for installed packages from IPS. So for example, if software is built with prefix /opt/msma/sw but installed to /builddir/build-1 (using make DESTDIR=/builddir/build-1 install), builddir will be /builddir/build-1 and targetdir will be /opt/msma/sw

name:	is package name without the version string

version:	is software version string, usually in form x.y.z

release:	is the packager release string, usually in the form x.y.z

description:	is the IPS description field

summary:	is the IPS summary field

arch:		is the IPS architecture field

classification:	is the IPS classification group field

All other fields and attributes that are directly not supported by this script could be passed within the @raw (see below) section. Read please official documentation regarding the supported fields (link above in the beginning of this article)

b) @files - this section allows packager to postprocess or to modify a file list and its attributes. Syntax is, that valid line begins either with minus "-" sign or plus "+" sign. Minus sign specifies, that file(s) will be ommited in the final package, plus sign indicates, that rewrite rules (see below) will be applied on files matching the mask. If there is not specified +/- at the beginning of the line, the line will be silently ignored same as if it is commneted out.

To specify file, the full mask matching the file is required, so for example:
`+/bin' will match only to a single /bin directory or file whilst `+/bin.*' will match to all files in /bin. Regular expressions are allowed, so for instance +/bin/(foo|bar) will select files /bin/foo and /bin/bar

Rewrite rules are used to change the attributes of the file that are normally derived from the filesystem as they are stored in the builddir. Actually implemented attributes are owner=, mode=, group= and path=. If the files are stored in the builddir under the local build account, to specify theirs ownership for a root could be done using this (assuming, that our whole software is prefixed to /opt/msma/sw): `+/opt/msma/sw.*,owner=root,group=root'. It is possible to have more rules matching the same file. They will be applied in the order in what they are specified in the config file. All additional attributes that are specified in the coma separated list will be appended to attributes per-file as they are. See please official documentation on which attributes IPS supports.

c) @raw - this section contains list of additional IPS rules that are added to the p5m manifest as they are, so for instance dependencies and creating users shall be specified in this section (see example above) as well as other exotic rules that are rarely used.

---------------------

Example workflow of creating IPS package of sample software (assuming we have sample.tgz with sources):

---------------------

$ gtar xzvf sample.tgz
$ cd sample
$ ./configure --prefix=/opt/sample
$. make
$ ./make DESDIR=/home/build/build0 install
$ cat << 'EOF' > sample-p5m.cfg
@main

builddir        /home/build/build0/opt/sample ## assuming, that full chrooted dir structure was created
targetdir       /opt/sample
name            extra/sample
version         1.0.0
release         0.0.9
description     This is just a sample description
summary         This is just a sample summary
arch            sparc
classification  MSMA

@files
## we set owner to root for all content
+/opt/sample.*,owner=root,group=sys

## here we discard one file that shall not be packed
-/opt/sample/junk

## here we additionally set different ownership and mode for another file
+/opt/sample/README,mode=0777,owner=nobody

@raw
## here we set according to the documentation the dependency on java package for extra/sample@1.0.0-0.0.9
depend fmri=pkg:/developer/java/jdk type=require

EOF

$ pkgsend publish -s /repos/sample -d /home/build/build0/opt/sample sample-p5m.cfg

In the last command we assume, that /repos/sample contains valid repository for solaris.
